2025-10-01 16:35:10,420 - INFO - Logging to D:\Testers\ai_qwen\logs\run_20251001_163510.log
2025-10-01 16:35:10,421 - INFO - Preparing pipeline components...
2025-10-01 16:36:16,759 - INFO - Pipeline loaded. Using device: cuda
2025-10-01 16:37:18,914 - ERROR - Run failed due to unexpected error: CUDA error: out of memory
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.
Traceback (most recent call last):
  File "D:\Testers\ai_qwen\run_qwen_edit.py", line 62, in main
    pipe.to("cuda")
  File "C:\PythonEnv\p311_qwen\Lib\site-packages\diffusers\pipelines\pipeline_utils.py", line 545, in to
    module.to(device, dtype)
  File "C:\PythonEnv\p311_qwen\Lib\site-packages\diffusers\models\modeling_utils.py", line 1423, in to
    return super().to(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\PythonEnv\p311_qwen\Lib\site-packages\torch\nn\modules\module.py", line 1340, in to
    return self._apply(convert)
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\PythonEnv\p311_qwen\Lib\site-packages\torch\nn\modules\module.py", line 900, in _apply
    module._apply(fn)
  File "C:\PythonEnv\p311_qwen\Lib\site-packages\torch\nn\modules\module.py", line 900, in _apply
    module._apply(fn)
  File "C:\PythonEnv\p311_qwen\Lib\site-packages\torch\nn\modules\module.py", line 900, in _apply
    module._apply(fn)
  [Previous line repeated 2 more times]
  File "C:\PythonEnv\p311_qwen\Lib\site-packages\torch\nn\modules\module.py", line 927, in _apply
    param_applied = fn(param)
                    ^^^^^^^^^
  File "C:\PythonEnv\p311_qwen\Lib\site-packages\torch\nn\modules\module.py", line 1326, in convert
    return t.to(
           ^^^^^
RuntimeError: CUDA error: out of memory
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.

